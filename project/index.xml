<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Andrew Dempsey</title>
    <link>https://adempsey.github.io/project/</link>
    <description>Recent content in Projects on Andrew Dempsey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 May 2017 15:58:41 -0700</lastBuildDate>
    
	<atom:link href="https://adempsey.github.io/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Image Filter Wrapper</title>
      <link>https://adempsey.github.io/project/ifw/</link>
      <pubDate>Fri, 19 May 2017 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/ifw/</guid>
      <description>Apple&amp;rsquo;s Core Image framework provides an extensive suite of APIs for image filtering, but its syntax is unintuitive and difficult to use. ImageFilterWrapper is a Swift framework that allows developers to take advantage of Core Image&amp;rsquo;s image processing capabilities through a simplified, type-safe syntax that integrates conveniently with Xcode&amp;rsquo;s autocompletion system.</description>
    </item>
    
    <item>
      <title>Box</title>
      <link>https://adempsey.github.io/project/box/</link>
      <pubDate>Fri, 13 Jan 2017 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/box/</guid>
      <description>I worked on the Box iOS app as a full-time contributor for 2 years. Some specific projects of mine were:
 Synchronizing recently viewed files across devices A share extension to upload files to Box directly from other apps App-to-app authentication with Microsoft Office apps Transitioning to a core architecture based on Box&amp;rsquo;s public iOS SDKs  </description>
    </item>
    
    <item>
      <title>Box Capture</title>
      <link>https://adempsey.github.io/project/capture/</link>
      <pubDate>Fri, 13 May 2016 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/capture/</guid>
      <description>Capture generates and stores content in Box&amp;rsquo;s cloud through photo, video, and audio recording. I worked on developing Capture&amp;rsquo;s document scanning algorithm, allowing users to generate high-quality digital copies of printed documents from a mobile device&amp;rsquo;s camera.</description>
    </item>
    
    <item>
      <title>Synesthesia</title>
      <link>https://adempsey.github.io/project/synesthesia/</link>
      <pubDate>Fri, 13 May 2016 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/synesthesia/</guid>
      <description>An interactive music visualizer created in Quartz Composer. The project comes with an Ableton Live file populated with MIDI clips used to synchronize the visual effects to Live&amp;rsquo;s metronome, which can be triggered and modified using an external MIDI controller.</description>
    </item>
    
    <item>
      <title>CollaboRead</title>
      <link>https://adempsey.github.io/project/collaboread/</link>
      <pubDate>Sun, 17 May 2015 15:59:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/collaboread/</guid>
      <description>CollaboRead is an iOS app developed in conjunction with Tufts University Medical Center to improve the quality of medical school radiology lectures. The app creates an interactive classroom environment by allowing lecturers to push medical images to students&amp;rsquo; mobile devices in the context of a question, e.g., &amp;ldquo;locate the tumor in this MRI scan.&amp;rdquo; Students can then work in groups to annotate the images and submit answers anonymously. The annotations can then be displayed on the lecturer&amp;rsquo;s screen to promote further discussion of the material.</description>
    </item>
    
    <item>
      <title>CollaboRead API</title>
      <link>https://adempsey.github.io/project/collaboread-api/</link>
      <pubDate>Sun, 17 May 2015 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/collaboread-api/</guid>
      <description>The CollaboRead API serves as the backend for devices running the CollaboRead iPad app. Written in Node.js, the API exposes a REST interface for CollaboRead&amp;rsquo;s data and pushes real-time updates to devices using websockets. The project also contains a web application that allows lecturers to evaluate student performance and build new problem sets.</description>
    </item>
    
    <item>
      <title>Freshly</title>
      <link>https://adempsey.github.io/project/freshly/</link>
      <pubDate>Sat, 13 Dec 2014 15:59:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/freshly/</guid>
      <description>An iOS app designed to help manage food purchases. After grocery shopping, users can enter their purchased items to record the contents of their kitchen. The app can then help generate shopping lists by tracking expiration dates and facilitate quick entry of new items by learning the shopping patterns of its users.</description>
    </item>
    
    <item>
      <title>ESCAPT</title>
      <link>https://adempsey.github.io/project/escapt/</link>
      <pubDate>Sat, 13 Dec 2014 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/escapt/</guid>
      <description>ESCAPT: Easy Strategies for Computers to Avoid the Public Turing Test is a research paper written for Ming Chow&amp;rsquo;s COMP 116: Introduction to Computer Security class at Tufts University in Fall 2014. The paper provides an overview of the logic behind (and inherent vulnerabilities within) the Completely Automated Turing Test to tell Computers and Humans Apart (CAPTCHA). Also included is a script capable of decoding challenges generated by the SnapHost CAPTCHA service.</description>
    </item>
    
    <item>
      <title>Edgey</title>
      <link>https://adempsey.github.io/project/edgey/</link>
      <pubDate>Tue, 13 May 2014 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/edgey/</guid>
      <description>An exploration in edge detection and cel shaded 3D renderings in C++. The project was built in several phases: creating 3D shape abstractions and cameras, building a recursive ray-tracer, and implementing cel shading and post-process edge detection.</description>
    </item>
    
    <item>
      <title>CloudCut</title>
      <link>https://adempsey.github.io/project/cloudcut/</link>
      <pubDate>Tue, 17 Dec 2013 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/cloudcut/</guid>
      <description>CloudCut (FKA CineMeow) is an in-browser video editor written in Node.JS. Video content and metadata is stored in the cloud and can be edited in real time across multiple devices.</description>
    </item>
    
    <item>
      <title>Sanity</title>
      <link>https://adempsey.github.io/project/sanity/</link>
      <pubDate>Fri, 23 Aug 2013 15:58:41 -0700</pubDate>
      
      <guid>https://adempsey.github.io/project/sanity/</guid>
      <description>I developed Sanity for an internship at IBM in 2013 for IT managers attempting to deploy IBM Connections to their enterprise. In the event of a configuration error, it will diagnose the issue, refer the user to the offending machine, and offer suggestions for remediation.</description>
    </item>
    
  </channel>
</rss>